/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import conexion.ClsConexion;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.*;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class VentanaPokedex extends javax.swing.JFrame {
//DESCARGA LA IMAFGEN EN MEMORIA
  BufferedImage buffer1 = null;
    Image imagen1 = null;//SIRVE PARA ALMACENAR IMÁGENES
    int contador = 0;
    
    Statement estado;//SIRVE PARA LA CONEXIÓN A LA BD
    ResultSet resultadoConsulta;//MANIPULAR EL RESULTADO
    Connection conexion;
    
    
    public VentanaPokedex() {
        initComponents();
        try {
            imagen1 = ImageIO.read(new File("C:\\Users\\HP\\Desktop\\datos\\imagenes\\black-white.png"));//Acá el path de la imagen de pokemones
        } catch (IOException ex) {
            ex.printStackTrace(System.out);
        }
        //Creo la imagen con el respectivo tamaño 
        buffer1 = (BufferedImage) ImagenPokemon.createImage(
        ImagenPokemon.getWidth(),
        ImagenPokemon.getHeight()
        );
         Graphics2D g2 = buffer1.createGraphics();
        
        dibujaElPokemonQueEstaEnLaPosicion(30);
    
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String JDBC_URL = "jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=convertToNull&useSSL=false&useTimezone=true&serverTimezone=UTC";

            conexion = DriverManager.getConnection(JDBC_URL, "root", "Junior2021");
            estado = conexion.createStatement();

        } catch (ClassNotFoundException ex) {
            ex.printStackTrace(System.out);
            System.out.println("Error en la clase");
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
            System.out.println("Error en la Base de Datos");
        }
    }
    

      private void dibujaElPokemonQueEstaEnLaPosicion(int posicion) {
        int fila = posicion / 31;
        int columna = posicion % 31;

        Graphics2D g2 = (Graphics2D) buffer1.getGraphics();
        g2.setColor(Color.black);

        g2.fillRect(0, 0, //pinta el fondo del jpanel negro
                ImagenPokemon.getWidth(),
                ImagenPokemon.getHeight());

        g2.drawImage(imagen1,
                0, //posicion X inicial dentro del jpanel 
                0, // posicion Y inicial dentro del jpanel
                ImagenPokemon.getWidth(), //ancho del jpanel
                ImagenPokemon.getHeight(), //alto del jpanel
                columna * 96, //posicion inicial X dentro de la imagen de todos los pokemon
                fila * 96, //posicion inicial Y dentro de la imagen de todos los pokemon
                columna * 96 + 96, //posicion final X
                fila * 96 + 96, //posicion final Y
                null //si no lo pones no va
        );

        repaint();
        

    }
    
@Override
    public void paint(Graphics g){
        super.paintComponents(g);//INVOCO PAINT Y LE MANDO EL OBJETO DE REFERENCIA
        
        Graphics2D  g2 = (Graphics2D) ImagenPokemon.getGraphics();//Realiza los graficos de imagenpokemon el panel de diseño
        
        g2.drawImage(buffer1,0,0,ImagenPokemon.getWidth(),//Dibuja el grafico de 00 a imagen de ancho y alto
                ImagenPokemon.getHeight(),null);
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImagenPokemon = new javax.swing.JPanel();
        izq = new javax.swing.JButton();
        der = new javax.swing.JButton();
        NombrePokemon = new javax.swing.JLabel();
        Favoritos = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaFavorito = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout ImagenPokemonLayout = new javax.swing.GroupLayout(ImagenPokemon);
        ImagenPokemon.setLayout(ImagenPokemonLayout);
        ImagenPokemonLayout.setHorizontalGroup(
            ImagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 202, Short.MAX_VALUE)
        );
        ImagenPokemonLayout.setVerticalGroup(
            ImagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 176, Short.MAX_VALUE)
        );

        izq.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 2, 18)); // NOI18N
        izq.setText("Anterior");
        izq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izqActionPerformed(evt);
            }
        });

        der.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 2, 18)); // NOI18N
        der.setText("Siguiente");
        der.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derActionPerformed(evt);
            }
        });

        NombrePokemon.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        NombrePokemon.setText("jLabel1");

        Favoritos.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        Favoritos.setText("Mostrar Favoritos");
        Favoritos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FavoritosActionPerformed(evt);
            }
        });

        TablaFavorito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(TablaFavorito);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(NombrePokemon, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(izq, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(der, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(168, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)))
                .addGap(83, 83, 83))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(ImagenPokemon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(Favoritos, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ImagenPokemon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NombrePokemon)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(izq, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(der, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Favoritos, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void izqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izqActionPerformed
        
    }//GEN-LAST:event_izqActionPerformed

    private void derActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derActionPerformed
        // TODO add your handling code here:
        dibujaElPokemonQueEstaEnLaPosicion(contador);
        contador --;
        if(contador <=0){
            contador = 1;
        }
       dibujaElPokemonQueEstaEnLaPosicion(contador);
        
        String cuerito = "Select * from pokemon where id="+(contador)+1;
        
        
        try {
            resultadoConsulta = estado.executeQuery(cuerito);
            if (resultadoConsulta.next()){
                NombrePokemon.setText(resultadoConsulta.getString(2));
            } else {
                NombrePokemon.setText("Este chucho no esta en el pokedex");
            }
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
            System.out.println("Clavo con sql");
        }
        
        contador++;
        if (contador >=649){
            contador = 649;
        }
    }//GEN-LAST:event_derActionPerformed

    private void FavoritosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FavoritosActionPerformed
        String Favorito;
        int Indice;
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;
        DefaultTableModel tabla = new DefaultTableModel();
        
        tabla.addColumn("id_pokemon");
        tabla.addColumn("Usuarios");
        tabla.addColumn("Favoritos");
        tabla.addColumn("correo");
        TablaFavorito.setModel(tabla);
        Favorito = "Uno de los mejores";
        String sql = "select * from tb_favoritos where preferencia = '" + Favorito + "'";
        String[] datos = new String[9];

        try {

            conn = ClsConexion.getConnection();
            stmt = conn.prepareStatement(sql);
            rs = stmt.executeQuery();
            while (rs.next()) {
                contador++;
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);
                tabla.addRow(datos);

                TablaFavorito.setModel(tabla);
                Indice = Integer.parseInt(rs.getString("id_pokemon"));
                dibujaElPokemonQueEstaEnLaPosicion(Indice - 1);

                resultadoConsulta = estado.
                        executeQuery("select * from tb_favoritos where id_pokemon = " + Indice);
                if (resultadoConsulta.next()) {
                    NombrePokemon.setText(resultadoConsulta.getString(2));
                } else {
                    NombrePokemon.setText("Este pokemon no esta en el pokedex");
                }
            }
            JOptionPane.showMessageDialog(null, "Error de Dato No encontrado");
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
        } finally {
            ClsConexion.close(rs);
            ClsConexion.close(stmt);
            ClsConexion.close(conn);
        }        // TODO add your handling code here:
                                   
    }//GEN-LAST:event_FavoritosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Favoritos;
    private javax.swing.JPanel ImagenPokemon;
    private javax.swing.JLabel NombrePokemon;
    private javax.swing.JTable TablaFavorito;
    private javax.swing.JButton der;
    private javax.swing.JButton izq;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
